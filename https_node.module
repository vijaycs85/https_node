<?php
/**
 * @file
 * Contains HTTPS node implementation.
 */

/**
 *  Implements hook_perm().
 */
function https_node_permission() {
  return array('allow https node access');
}

/**
 *  Implements hook_form_alter().
 */
function https_node_form_alter(&$form, $form_state, $form_id) {
    //allow on a per-node-type basis
    if ('node_type_form' == $form_id) {
      $form['https_node'] = array(
        '#type' => 'fieldset',
        '#title' => t('HTTPS Node settings'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#weight' => 35,
        '#group' => 'additional_settings',
      );
      $form['https_node']['https_node_enable'] = array(
        '#type' => 'checkbox',
        '#title' => t('Enable HTTPS option'),
        '#default_value' => variable_get('https_node_enable_'. $form['#node_type']->type, 0),
        '#description' => t('Check this box to enable HTTPS option for this node type.')
      );
    }
    // for node form.
    elseif (isset($form['type']['#value']) && $form['type']['#value'] .'_node_form' == $form_id) {
      if (user_access('allow https node access')) {
        $enabled = variable_get('https_node_enable_'. $form['type']['#value'], 0) == 1;

        if ($enabled ) {
          $node = $form['#node'];

          // if this is a preview then get the values from the form, not the db
          if (isset($form_state['values']['op']) && $form_state['values']['op'] == t('Preview')) {
            $default = $form_state['values']['https_node'];
          }
          elseif (isset($node->nid) && $node->nid > 0) {
            $default = 0;
            // load the values if we are viewing an existing node
            $result = db_query('SELECT status FROM {https_node} WHERE nid = %d', $node->nid)->fetchField();
            if ($result) {
              $default = $result->status;
            }
          }
          else {
            $default = 0;
          }

          $form['https_node_settings'] = array(
            '#type' => 'fieldset',
            '#title' => t('HTTPS Settings'),
            '#collapsible' => TRUE,
            '#collapsed' => TRUE,
            '#weight' => 35,
            '#group' => 'additional_settings',
          );

          $form['https_node_settings']['https_node'] = array(
            '#type' => 'checkbox',
            '#title' => t('Enable HTTPS'),
            '#default_value' => $default,
            '#description' => t('Force node view page to load in HTTPS')
          );
        }
      }
    }
}

/**
 *  Implements hook_node_load().
 */
function https_node_node_load($nodes, $types) {
  $enabled = variable_get('https_node_enable_'. $node->type, 0) == 1;
  if (isset($node->nid) && $node->nid && $enabled) {
    $result = db_query('SELECT * FROM {https_node} WHERE nid = %d', $node->nid)->fetchAssoc();
    if ($result) {
      $row = (object)($result);
      if (isset($row->nid)) {
        $node->https_node = $row->status;
      }
    }
  }
}

/**
 *  Implements hook_node_view().
 */
function https_node_node_view($node, $view_mode, $langcode) {
  if (!securepages_is_secure() && property_exists($node, 'https_node') && $node->https_node == 1) {
    securepages_goto(TRUE);
  }
}

/**
 *  Implements hook_node_insert().
 */
function https_node_node_insert($node) {
  if (user_access('allow https node access')) {
    // only insert into database if we need to (un)publish this node at some date
    if (isset($node->nid) && $node->nid && property_exists($node, 'https_node')) {
      db_query('INSERT INTO {https_node} (nid, status) VALUES (:nid, :status)', array(':nid' => $node->nid, ':status' => $node->https_node));
    }
  }
}


/**
 *  Implements hook_node_update().
 */
function https_node_node_update($node) {
  if (user_access('allow https node access')) {
    if (isset($node->nid) && $node->nid) {
      $exists = db_query('SELECT nid FROM {https_node} WHERE nid = :nid', array(':nid' => $node->nid))->fetchField();
      $status = isset($node->https_node) ? $node->https_node : 0;

      // if this node has already been set as https.
      if ($exists) {
        db_query('UPDATE {https_node} SET status = :status WHERE nid = :nid',  array(':nid' => $node->nid, ':status' => $status));
      }
      // Node doesn't exist, create a record.
      else {
        db_query('INSERT INTO {https_node} (nid, status) VALUES (":nid", :status)', array(':nid' => $node->nid, ':status' => $status));
      }
    }
  }
}

/**
 *  Implements hook_node_delete().
 */
function https_node_node_delete($node) {
  if (user_access('allow https node access')) {
    db_query('DELETE FROM {https_node} WHERE nid = :nid',array(':nid' => $node->nid));
  }
}

/**
 *  Implements hook_node_type_delete().
 */
function https_node_node_type_delete($info) {
  variable_del('https_node_enable_' . $info->type);
}
